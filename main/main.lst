     1                                  ;------------------------------------------------------------------------------
     2                                  ; Executable file	:	main
     3                                  ; Version			:	0.0
     4                                  ; Created date		:	2018-01-16
     5                                  ; Last update		:	2018-01-16
     6                                  ; Author			:	Boris
     7                                  ; Description		:	???
     8                                  ;
     9                                  ; Assemble			:	see makefile
    10                                  ;------------------------------------------------------------------------------
    11                                  
    12                                  section .bss
    13 00000000 <res 00000008>          	timeval_buf: resb 8				; reserve pointer for timeval structure
    14                                  									; struct timeval {
    15                                  									;	time_t		tv_sec; /* seconds */
    16                                  									;	suseconds_t	tv_usec; /* microseconds  */
    17                                  									; }
    18                                  
    19                                  section .data
    20                                  	cnv_long_str: 					; empty string to hold convertion string
    21                                  									; of 32 NILs, 1 linefeed and 
    22                                  									; 1 carriage return
    23 00000000 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    23 00000009 00                 
    24 0000000A 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    24 00000013 00                 
    25 00000014 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    25 0000001D 00                 
    26 0000001E 0000                    				db 0x0,0x0
    27                                  	cnv_long_str_len: equ $-cnv_long_str	; length of cnv_long_str
    28 00000020 0A0E                    	endl: db 0x0a,0x0e				; end of line string declaration
    29                                  	endl_len: equ $-endl			; end of line string length declaration
    30                                  
    31                                  section .text
    32                                  	global _start					; declaring starting point
    33                                  
    34                                  _start:
    35 00000000 E828000000              	call print_time					; executing print_time
    36 00000005 E806000000              	call print_endl					; executing print_endl
    37                                  
    38 0000000A B001                    	mov al,0x01						; setting syscall code 'exit'
    39 0000000C B300                    	mov bl,0x0						; setting return code
    40 0000000E CD80                    	int 0x80						; performing interrupt
    41                                  
    42                                  ;------------------------------------------------------------------------------
    43                                  ; print_endl	:	prints line feed and carriage return characters to stdout
    44                                  ; updated		:	2018-01-16
    45                                  ; in			:	[none]
    46                                  ; out			:	[none]
    47                                  ; modifies		:	[none]
    48                                  ; calls			:	[none]
    49                                  ;
    50                                  
    51                                  print_endl:
    52 00000010 50                      	push eax						;
    53 00000011 53                      	push ebx						; preserving registers
    54 00000012 51                      	push ecx						;
    55                                  	
    56 00000013 B804000000              	mov eax,0x04					;
    57 00000018 BB01000000              	mov ebx,0x01					;
    58 0000001D B9[20000000]            	mov ecx,endl					; printing endl string to stdout
    59 00000022 BA02000000              	mov edx,endl_len				;
    60 00000027 CD80                    	int 0x80						;
    61                                  
    62 00000029 59                      	pop ecx							;
    63 0000002A 5B                      	pop ebx							; preserving registers
    64 0000002B 58                      	pop eax							;
    65 0000002C C3                      	ret								; returning control
    66                                  
    67                                  
    68                                  ;------------------------------------------------------------------------------
    69                                  ; print_time	:	prints timeval concatenated in decimal format to stdout
    70                                  ; updated		:	2018-01-16
    71                                  ; in			:	[none]
    72                                  ; out			:	[none]
    73                                  ; modifies		:	[none]
    74                                  ; calls			:	cnv_long
    75                                  ;
    76                                  
    77                                  print_time:
    78 0000002D 50                      	push eax						;
    79 0000002E 53                      	push ebx						;
    80 0000002F 51                      	push ecx						; preserving registers
    81 00000030 52                      	push edx						;
    82 00000031 56                      	push esi						;
    83                                  
    84 00000032 B04E                    	mov al,0x4e						; sys_gettimeofday code
    85 00000034 BB[00000000]            	mov ebx,timeval_buf				; supplying timeval pointer
    86 00000039 CD80                    	int 0x80						; making call to kernel
    87                                  
    88 0000003B A1[00000000]            	mov eax,dword[timeval_buf]		; loading first part of timeval to eax
    89 00000040 B30A                    	mov bl,0x0a						; loading decimal base to bl
    90 00000042 E832000000              	call cnv_long					; executing conversion function
    91                                  
    92 00000047 B804000000              	mov eax,0x04					;
    93 0000004C BB01000000              	mov ebx,0x01					;
    94 00000051 88CA                    	mov dl,cl						; printing generated string to stdout
    95 00000053 89F1                    	mov ecx,esi						;
    96 00000055 CD80                    	int 0x80						;
    97                                  
    98 00000057 A1[04000000]            	mov eax,dword[timeval_buf+4]	; loading second part of timeval to eax
    99 0000005C B30A                    	mov bl,0x0a						; loading decimal base do bl
   100 0000005E E816000000              	call cnv_long					; executing convertion function
   101                                  
   102 00000063 B804000000              	mov eax,0x04					;
   103 00000068 BB01000000              	mov ebx,0x01					;
   104 0000006D 88CA                    	mov dl,cl						; printing generated string to stdout
   105 0000006F 89F1                    	mov ecx,esi						;
   106 00000071 CD80                    	int 0x80						;
   107                                  
   108 00000073 5E                      	pop esi							;
   109 00000074 5A                      	pop edx							;
   110 00000075 59                      	pop ecx							; preserving registers
   111 00000076 5B                      	pop ebx							;
   112 00000077 58                      	pop eax							;
   113 00000078 C3                      	ret								; returning control
   114                                  
   115                                  
   116                                  ;------------------------------------------------------------------------------
   117                                  ; cnv_long	:	converts number to provided base and stores in a string
   118                                  ; updated	:	2018-01-16
   119                                  ; in		:	eax - number to convert
   120                                  ;				bl	- base
   121                                  ; out		:	esi - pointer to output string
   122                                  ;				cl	- string length
   123                                  ; modifies	:	[none]
   124                                  ; calls		:	[none]
   125                                  ;
   126                                  
   127                                  cnv_long:
   128 00000079 50                      	push eax						;
   129 0000007A 52                      	push edx						; preserving registers
   130 0000007B 53                      	push ebx						;
   131                                  
   132 0000007C BE[1F000000]            	mov esi,cnv_long_str+cnv_long_str_len-1	; setting esi string pointer to the
   133                                  											; end of string
   134 00000081 B101                    	mov cl,0x01						; setting output string length (lf & cr)
   135 00000083 83E30F                  	and ebx,0x0f					; masking out first byte of ebx register
   136                                  .cnv:
   137 00000086 31D2                    	xor edx,edx						; emptying edx (remainder register)
   138 00000088 F7F3                    	div ebx							; deviding eax by ebx, remainder in edx
   139 0000008A 80C230                  	add dl,'0'						; makinf digit an ascii char e.g. 1 -> '1'
   140 0000008D FEC1                    	inc cl							; increment string size counter
   141 0000008F 80FA39                  	cmp dl,'9'						; check if base >10
   142 00000092 7603                    	jbe .append						; go to storing portion of the algorithms 
   143                                  									; if no
   144 00000094 80C228                  	add dl,'a'-'9'					; else get a corresponding letter
   145                                  .append:
   146 00000097 8816                    	mov byte[esi],dl				; store digit in string
   147 00000099 4E                      	dec esi							; move string pointer one up
   148 0000009A 6683F800                	cmp ax,0						; check if number is fully converted
   149 0000009E 75E6                    	jnz .cnv						; go to .cnz if not
   150                                  	
   151 000000A0 5B                      	pop ebx							;
   152 000000A1 5A                      	pop edx							; preserving registers
   153 000000A2 58                      	pop eax							;
   154 000000A3 C3                      	ret								; returning control
