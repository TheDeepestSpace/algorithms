     1                                  ;------------------------------------------------------------------------------
     2                                  ; Executable file	:	main
     3                                  ; Version			:	0.0
     4                                  ; Created date		:	2018-01-16
     5                                  ; Last update		:	2018-01-16
     6                                  ; Author			:	Boris
     7                                  ; Description		:	???
     8                                  ;
     9                                  ; Assemble			:	see makefile
    10                                  ;------------------------------------------------------------------------------
    11                                  
    12                                  extern print_time
    13                                  
    14                                  section .data
    15                                  	cnv_long_str: 					; empty string to hold convertion string
    16                                  									; of 32 NILs, 1 linefeed and 
    17                                  									; 1 carriage return
    18 00000000 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    18 00000009 00                 
    19 0000000A 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    19 00000013 00                 
    20 00000014 000000000000000000-     				db 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    20 0000001D 00                 
    21 0000001E 0000                    				db 0x0,0x0
    22                                  	cnv_long_str_len: equ $-cnv_long_str	; length of cnv_long_str
    23 00000020 0A0E                    	endl: db 0x0a,0x0e				; end of line string declaration
    24                                  	endl_len: equ $-endl			; end of line string length declaration
    25                                  
    26                                  section .text
    27                                  	global _start					; declaring starting point
    28                                  
    29                                  _start:
    30 00000000 E8(00000000)            	call print_time					; executing print_time
    31 00000005 E810000000              	call print_endl					; executing print_endl
    32                                  
    33 0000000A E8(00000000)            	call print_time					; executing print_time [1]
    34 0000000F E806000000              	call print_endl					; executing print_endl [1]
    35                                  
    36 00000014 B001                    	mov al,0x01						; setting syscall code 'exit'
    37 00000016 B300                    	mov bl,0x0						; setting return code
    38 00000018 CD80                    	int 0x80						; performing interrupt
    39                                  
    40                                  ;------------------------------------------------------------------------------
    41                                  ; print_endl	:	prints line feed and carriage return characters to stdout
    42                                  ; updated		:	2018-01-16
    43                                  ; in			:	[none]
    44                                  ; out			:	[none]
    45                                  ; modifies		:	[none]
    46                                  ; calls			:	[none]
    47                                  ;
    48                                  
    49                                  print_endl:
    50 0000001A 50                      	push eax						;
    51 0000001B 53                      	push ebx						; preserving registers
    52 0000001C 51                      	push ecx						;
    53                                  	
    54 0000001D B804000000              	mov eax,0x04					;
    55 00000022 BB01000000              	mov ebx,0x01					;
    56 00000027 B9[20000000]            	mov ecx,endl					; printing endl string to stdout
    57 0000002C BA02000000              	mov edx,endl_len				;
    58 00000031 CD80                    	int 0x80						;
    59                                  
    60 00000033 59                      	pop ecx							;
    61 00000034 5B                      	pop ebx							; preserving registers
    62 00000035 58                      	pop eax							;
    63 00000036 C3                      	ret								; returning control
    64                                  
    65                                  ;------------------------------------------------------------------------------
    66                                  ; cnv_long	:	converts number to provided base and stores in a string
    67                                  ; updated	:	2018-01-16
    68                                  ; in		:	eax - number to convert
    69                                  ;				bl	- base
    70                                  ; out		:	esi - pointer to output string
    71                                  ;				cl	- string length
    72                                  ; modifies	:	[none]
    73                                  ; calls		:	[none]
    74                                  ;
    75                                  
    76                                  cnv_long:
    77 00000037 50                      	push eax						;
    78 00000038 52                      	push edx						; preserving registers
    79 00000039 53                      	push ebx						;
    80                                  
    81 0000003A BE[1F000000]            	mov esi,cnv_long_str+cnv_long_str_len-1	; setting esi string pointer to the
    82                                  											; end of string
    83 0000003F B101                    	mov cl,0x01						; setting output string length (lf & cr)
    84 00000041 83E30F                  	and ebx,0x0f					; masking out first byte of ebx register
    85                                  .cnv:
    86 00000044 31D2                    	xor edx,edx						; emptying edx (remainder register)
    87 00000046 F7F3                    	div ebx							; deviding eax by ebx, remainder in edx
    88 00000048 80C230                  	add dl,'0'						; makinf digit an ascii char e.g. 1 -> '1'
    89 0000004B FEC1                    	inc cl							; increment string size counter
    90 0000004D 80FA39                  	cmp dl,'9'						; check if base >10
    91 00000050 7603                    	jbe .append						; go to storing portion of the algorithms 
    92                                  									; if no
    93 00000052 80C228                  	add dl,'a'-'9'					; else get a corresponding letter
    94                                  .append:
    95 00000055 8816                    	mov byte[esi],dl				; store digit in string
    96 00000057 4E                      	dec esi							; move string pointer one up
    97 00000058 6683F800                	cmp ax,0						; check if number is fully converted
    98 0000005C 75E6                    	jnz .cnv						; go to .cnz if not
    99                                  
   100 0000005E 5B                      	pop ebx							;
   101 0000005F 5A                      	pop edx							; preserving registers
   102 00000060 58                      	pop eax							;
   103 00000061 C3                      	ret								; returning control
